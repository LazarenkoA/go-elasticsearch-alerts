---
# ====================================
#
#            RESOURCE TYPES
#
# ====================================
resource_types:
- name: slack-alert
  type: registry-image
  source:
    repository: arbourd/concourse-slack-alert-resource

- name: pull-request
  type: registry-image
  source:
    repository: teliaoss/github-pr-resource


# ====================================
#
#            RESOURCES
#
# ====================================
resources:
- name: go-elasticsearch-alerts-pr
  type: pull-request
  icon: github-circle
  source:
    repository: morningconsult/go-elasticsearch-alerts
    access_token: ((github-access-token))

- name: go-elasticsearch-alerts
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    private_key: ((github-private-key))
    branch: master
    clean_tags: true

- name: go-elasticsearch-alerts-bumped
  type: git
  icon: github-circle
  source:
    uri: ((github-repo))
    private_key: ((github-private-key))
    branch: master

- name: golang
  type: registry-image
  icon: golf
  source:
    repository: golang
    tag: 1.12-alpine3.9

- name: python
  type: registry-image
  icon: language-python
  source:
    repository: python
    tag: 3.7.3-alpine3.9

- name: slack
  type: slack-alert
  icon: slack
  source:
    url: ((slack-webhook))
    channel: '#build'

# ====================================
#
#            JOBS
#
# ====================================
jobs:
- name: validate-pull-request
  build_logs_to_retain: 30
  serial: true
  plan:
  - in_parallel:
    - get: go-elasticsearch-alerts-pr
      trigger: true
    - get: golang
  - put: go-elasticsearch-alerts-pr
    params:
      path: go-elasticsearch-alerts-pr
      status: pending
  - task: validate-pull-request
    image: golang
    file: go-elasticsearch-alerts-pr/ci/tasks/validate.yml
    input_mapping: {repo: go-elasticsearch-alerts-pr}
    on_failure:
      put: go-elasticsearch-alerts-pr
      params:
        path: go-elasticsearch-alerts-pr
        status: failure
    on_abort:
      put: go-elasticsearch-alerts-pr
      params:
        path: go-elasticsearch-alerts-pr
        status: error
  - put: go-elasticsearch-alerts-pr
    params:
      path: go-elasticsearch-alerts-pr
      status: success

- name: validate-master
  build_logs_to_retain: 30
  serial: true
  plan:
  - in_parallel:
    - get: go-elasticsearch-alerts
      trigger: true
    - get: golang
  - task: validate-master
    image: golang
    file: go-elasticsearch-alerts/ci/tasks/validate.yml
    input_mapping: {repo: go-elasticsearch-alerts}
    on_failure:
      put: slack
      params: {alert_type: failed}
    on_abort:
      put: slack
      params: {alert_type: aborted}

- name: build-new-release
  build_logs_to_retain: 30
  serial: true
  plan:
  - in_parallel:
    - get: go-elasticsearch-alerts
      trigger: true
      passed: [validate-master]
    - get: python
  - task: build-release
    image: python
    file: go-elasticsearch-alerts/ci/tasks/build-release.yml
    input_mapping: {repo: go-elasticsearch-alerts}
    output_mapping: {repo-dirty: go-elasticsearch-alerts-dirty}
    params:
      GITHUB_ACTOR: ((github-actor))
      GITHUB_EMAIL: ((github-email))
    on_success:
      put: go-elasticsearch-alerts-bumped
      params:
        repository: go-elasticsearch-alerts-dirty
        merge: true
    on_failure:
      put: slack
      params: {alert_type: failed}
    on_abort:
      put: slack
      params: {alert_type: aborted}

- name: publish-release
  build_logs_to_retain: 30
  serial: true
  plan:
  - in_parallel:
    - get: go-elasticsearch-alerts-bumped
      trigger: true
      passed: [build-new-release]
    - get: golang
  - task: test-and-build
    image: golang
    file: go-elasticsearch-alerts-bumped/ci/tasks/publish-release.yml
    input_mapping: {repo: go-elasticsearch-alerts-bumped}
    params:
      GITHUB_TOKEN: ((github-access-token))
    on_failure:
      put: slack
      params: {alert_type: failed}
    on_abort:
      put: slack
      params: {alert_type: aborted}
